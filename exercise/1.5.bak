#lang racket

(load 
(define (new-if predicate then-clause else-clause)
  (cond (predicate then-clause)
        (else else-clause)))

(define (new-new-if predicate then-clause else-clause)
  (if predicate then-clause else-clause))


;(new-new-if #t(display "good")(display "bad"))

(cond ((= 1 1) (display "good"))
      (else (display "bad")))